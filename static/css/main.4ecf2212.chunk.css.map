{"version":3,"sources":["main.4ecf2212.chunk.css","webpack://src/styles/card.scss","webpack://src/styles/navbar.scss","webpack://src/styles/include-media.scss","webpack://src/styles/header.scss","webpack://src/styles/work.scss","webpack://src/styles/about.scss","webpack://src/styles/skills.scss","webpack://src/styles/footer.scss","webpack://src/styles/mains.scss"],"names":[],"mappings":"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","file":"main.4ecf2212.chunk.css","sourcesContent":["@import url(https://fonts.googleapis.com/css2?family=Montserrat:wght@400;700&family=Open+Sans&display=swap);\n@import url(https://fonts.googleapis.com/css2?family=Roboto+Condensed&display=swap);\n@import url(https://fonts.googleapis.com/css2?family=Raleway&display=swap);\n.card{width:100%;height:250px;overflow:hidden !important;display:-webkit-flex;display:flex;-webkit-align-items:center;align-items:center;-webkit-justify-content:center;justify-content:center;background-size:cover;background-repeat:no-repeat;background-position:center}.card .content{font-family:\"Open Sans\";width:100%;text-align:center;padding:10px;opacity:0;transition:all 500ms ease-in-out;-webkit-transform:translate(0, 20px);transform:translate(0, 20px);cursor:pointer}.card .content h1{font-size:14px;color:#ffffff}.card .content p{font-size:10px;color:#ffffff;margin-bottom:20px}.card .content .btn{background-color:black;color:white;padding:10px;text-decoration:none}.card .content:hover{opacity:1;-webkit-transform:translate(0, 0px);transform:translate(0, 0px);background-color:#0000007e}.navbar-wrapper{width:100vw;display:-webkit-flex;display:flex;-webkit-align-items:center;align-items:center;padding-top:10px;-webkit-justify-content:space-between;justify-content:space-between;border-bottom:5px solid #ffffff;box-shadow:0px 3px 0px #00000013;color:black;background-color:rgba(254,231,21,0.842);z-index:1000;position:absolute}.navbar-wrapper .current{font-weight:600;font-size:28px;border:1px solid white;width:120px;padding:5px;margin:10px 0px 10px 10px;box-shadow:inset 9px 9px 34px -24px rgba(255,87,0,0.342);text-align:center}.navbar-wrapper .current .fade-enter{opacity:0}.navbar-wrapper .current .fade-enter-active{opacity:1;transition:opacity 300ms cubic-bezier(0.55, 0.085, 0.68, 0.53)}.navbar-wrapper .current .fade-exit{opacity:1}.navbar-wrapper .current .fade-exit-active{opacity:0;transition:opacity 200ms cubic-bezier(0.25, 0.46, 0.45, 0.94)}@media (min-width: 320px) and (max-width: 424px){.navbar-wrapper .current{font-size:20px;width:100px;margin-right:5px}}.navbar-wrapper .links-wrapper .button{text-decoration:none;padding:10px;font-family:\"Open Sans\";transition:all 0.2s ease-in-out;font-size:16px;background-color:transparent;outline:none;border:0px;margin-right:16px;cursor:pointer}.navbar-wrapper .links-wrapper .button:hover{color:#ff5700}@media (min-width: 320px) and (max-width: 424px){.navbar-wrapper .links-wrapper .button{font-size:8px;line-height:10px;padding:0px}}@media (min-width: 425px) and (max-width: 767px){.navbar-wrapper .links-wrapper .button{font-size:12px;padding:5px;margin-right:8px}}.header-wrapper{width:100vw;display:-webkit-flex;display:flex;-webkit-flex-direction:column;flex-direction:column;-webkit-align-items:center;align-items:center;-webkit-justify-content:center;justify-content:center}.header-wrapper .heading-wrapper h1{font-family:'Raleway', sans-serif;font-size:3em;text-align:center;line-height:20px}@media (min-width: 320px) and (max-width: 424px){.header-wrapper .heading-wrapper h1{font-size:1.5rem;line-height:10px}}@media (min-width: 425px) and (max-width: 767px){.header-wrapper .heading-wrapper h1{font-size:2rem}}@media (min-width: 768px) and (max-width: 1023px){.header-wrapper .heading-wrapper h1{font-size:2rem}}.header-wrapper .buttons{display:-webkit-flex;display:flex;width:300px;-webkit-flex-direction:column;flex-direction:column;-webkit-align-items:center;align-items:center}.header-wrapper .buttons .btn-5{border:0 solid;box-shadow:inset 0 0 20px rgba(255,255,255,0);outline:1px solid;outline-color:rgba(255,255,255,0.5);outline-offset:0px;text-shadow:none;transition:all 1250ms cubic-bezier(0.19, 1, 0.22, 1)}.header-wrapper .buttons .btn-5:hover{border:1px solid;box-shadow:inset 0 0 20px rgba(255,255,255,0.5),0 0 20px rgba(255,255,255,0.2);outline-color:rgba(255,255,255,0);outline-offset:15px;text-shadow:1px 1px 2px #427388}.work-wrapper{width:80vw;margin-top:10vh;display:-webkit-flex;display:flex;-webkit-flex-direction:column;flex-direction:column;-webkit-align-items:center;align-items:center;-webkit-justify-content:space-between;justify-content:space-between}.work-wrapper h1{font-size:3rem;line-height:20px}.work-wrapper .grid{display:grid;margin-top:20px;grid-template-columns:repeat(3, 1fr);grid-gap:50px}@media (min-width: 320px) and (max-width: 424px){.work-wrapper .grid{grid-template-columns:1fr}}@media (min-width: 425px) and (max-width: 767px){.work-wrapper .grid{grid-template-columns:1fr}}@media (min-width: 768px) and (max-width: 1023px){.work-wrapper .grid{grid-template-columns:1fr 1fr}}.about-section{width:100vw;max-width:1200px;display:-webkit-flex;display:flex;-webkit-justify-content:space-around;justify-content:space-around;color:azure}@media (min-width: 320px) and (max-width: 424px){.about-section{-webkit-flex-direction:column;flex-direction:column}}@media (min-width: 425px) and (max-width: 1024px){.about-section{-webkit-flex-direction:column;flex-direction:column;-webkit-align-items:center;align-items:center;margin-top:10vh;width:90vw}}.about-section .content{display:-webkit-flex;display:flex;-webkit-flex-direction:column;flex-direction:column}@media (max-width: 319px){.about-section .content{width:100%}}@media (min-width: 321px) and (max-width: 767px){.about-section .content{width:80%}}@media (min-width: 768px) and (max-width: 1023px){.about-section .content{width:75%}}.about-section .content h1{font-size:3rem;line-height:20px}@media (min-width: 320px) and (max-width: 768px){.about-section .content h1{text-align:center}}.about-section .image-wrapper{width:650px;height:auto;display:-webkit-flex;display:flex;-webkit-justify-content:center;justify-content:center;-webkit-align-items:center;align-items:center;overflow:hidden;padding:10px}.about-section .image-wrapper img{max-width:80%;max-height:80%;margin-bottom:50px}@media (min-width: 320px) and (max-width: 767px){.about-section .image-wrapper{width:auto;-webkit-align-self:center;align-self:center}}@media (min-width: 768px) and (max-width: 1023px){.about-section .image-wrapper{width:auto;height:auto}}.about-section .image-wrapper .hexagon{background-image:url(/protfolio/static/media/profilepic2.b5a930b7.jpg)}.about-section .btn-2{letter-spacing:0;padding:20px}@media (min-width: 320px) and (max-width: 768px){.about-section .btn-2{-webkit-align-self:center;align-self:center}}.about-section .btn-2:hover,.about-section .btn-2:active{letter-spacing:5px}.about-section .btn-2:after,.about-section .btn-2:before{-webkit-backface-visibility:hidden;backface-visibility:hidden;border:1px solid rgba(253,230,21,0);bottom:0px;content:\" \";display:block;margin:0 auto;position:relative;transition:all 280ms ease-in-out;width:0}.about-section .btn-2:hover:after,.about-section .btn-2:hover:before{-webkit-backface-visibility:hidden;backface-visibility:hidden;border-color:#fde615;transition:width 350ms ease-in-out;width:70%}.about-section .btn-2:hover:before{bottom:auto;top:0;width:70%}.skills-container{width:60vw;max-width:1200px;display:-webkit-flex;display:flex;margin-bottom:10vh;-webkit-flex-direction:column;flex-direction:column;-webkit-align-items:center;align-items:center;-webkit-justify-content:center;justify-content:center;background-color:#00000069;color:white;box-shadow:-3px 3px 10px 0px;border-radius:1em;padding:60px}.skills-container h1{font-size:3rem;line-height:20px}.skills-container .skills-grid{display:grid;grid-template-columns:repeat(3, 1fr);grid-gap:20px}@media (min-width: 320px) and (max-width: 424px){.skills-container .skills-grid{grid-template-columns:1fr}}@media (min-width: 425px) and (max-width: 767px){.skills-container .skills-grid{grid-template-columns:1fr}}@media (min-width: 768px) and (max-width: 1023px){.skills-container .skills-grid{grid-template-columns:1fr 1fr}}.skills-container .skills-grid .skill{display:-webkit-flex;display:flex;-webkit-flex-direction:column;flex-direction:column;-webkit-align-items:center;align-items:center;text-align:center;padding:100px}@media (min-width: 320px) and (max-width: 424px){.skills-container .skills-grid .skill{padding:0px}}@media (min-width: 425px) and (max-width: 767px){.skills-container .skills-grid .skill{padding:40px}}.skills-container .skills-grid .skill img{height:6rem}.skills-container .skills-grid .skill p{font-size:14px}.skills-container .hex-grid{display:-webkit-flex;display:flex;-webkit-justify-content:center;justify-content:center}.skills-container .hex-grid__list{--amount: 5;position:relative;padding:0;margin:0;list-style-type:none;display:grid;grid-template-columns:repeat(var(--amount), 1fr 2fr) 1fr;grid-gap:2.5rem 5rem}.skills-container .hex-grid__item{position:relative;grid-column:1 / span 3;grid-row:calc(var(--counter) + var(--counter))/span 2;-webkit-filter:drop-shadow(0 0 10px rgba(68,68,68,0.08));filter:drop-shadow(0 0 10px rgba(68,68,68,0.08));height:0;padding-bottom:90%}.skills-container .hex-grid__content{position:absolute;height:100%;width:100%;font-size:1.125rem;color:#111111;background-color:white;-webkit-clip-path:polygon(75% 0, 100% 50%, 75% 100%, 25% 100%, 0 50%, 25% 0);clip-path:polygon(75% 0, 100% 50%, 75% 100%, 25% 100%, 0 50%, 25% 0);display:-webkit-flex;display:flex;-webkit-flex-direction:column;flex-direction:column;-webkit-justify-content:center;justify-content:center;-webkit-align-items:center;align-items:center;padding:2rem 25%;text-decoration:none;text-align:center;transition:-webkit-transform .24s ease-out;transition:transform .24s ease-out;transition:transform .24s ease-out, -webkit-transform .24s ease-out}@media screen and (min-width: 1440px){.skills-container .hex-grid__list{--amount: 5;--counter: 1}.skills-container .hex-grid__item:nth-of-type(5n+1){grid-column:1 / span 3}.skills-container .hex-grid__item:nth-of-type(5n+2){grid-column:3 / span 3;grid-row:calc(var(--counter) + var(--counter) - 1)/span 2}.skills-container .hex-grid__item:nth-of-type(5n+3){grid-column:5 / span 3}.skills-container .hex-grid__item:nth-of-type(5n+4){grid-column:7 / span 3;grid-row:calc(var(--counter) + var(--counter) - 1)/span 2}.skills-container .hex-grid__item:nth-of-type(5n+5){grid-column:9 / span 3}.skills-container .hex-grid__item:nth-of-type(n+6){--counter: 2}.skills-container .hex-grid__item:nth-of-type(n+11){--counter: 3}.skills-container .hex-grid__item:nth-of-type(n+16){--counter: 4}.skills-container .hex-grid__item:nth-of-type(n+21){--counter: 5}.skills-container .hex-grid__item:nth-of-type(n+26){--counter: 6}.skills-container .hex-grid__item:nth-of-type(n+31){--counter: 7}.skills-container .hex-grid__item:nth-of-type(n+36){--counter: 8}.skills-container .hex-grid__item:nth-of-type(n+41){--counter: 9}.skills-container .hex-grid__item:nth-of-type(n+46){--counter: 10}.skills-container .hex-grid__item:nth-of-type(n+51){--counter: 11}.skills-container .hex-grid__item:nth-of-type(n+56){--counter: 12}.skills-container .hex-grid__item:nth-of-type(n+61){--counter: 13}.skills-container .hex-grid__item:nth-of-type(n+66){--counter: 14}.skills-container .hex-grid__item:nth-of-type(n+71){--counter: 15}.skills-container .hex-grid__item:nth-of-type(n+76){--counter: 16}.skills-container .hex-grid__item:nth-of-type(n+81){--counter: 17}.skills-container .hex-grid__item:nth-of-type(n+86){--counter: 18}.skills-container .hex-grid__item:nth-of-type(n+91){--counter: 19}.skills-container .hex-grid__item:nth-of-type(n+96){--counter: 20}.skills-container .hex-grid__item:nth-of-type(n+101){--counter: 21}}@media screen and (min-width: 1120px) and (max-width: 1439px){.skills-container .hex-grid__list{--amount: 4;--counter: 1}.skills-container .hex-grid__item:nth-of-type(4n+1){grid-column:1 / span 3}.skills-container .hex-grid__item:nth-of-type(4n+2){grid-column:3 / span 3;grid-row:calc(var(--counter) + var(--counter) - 1)/span 2}.skills-container .hex-grid__item:nth-of-type(4n+3){grid-column:5 / span 3}.skills-container .hex-grid__item:nth-of-type(4n+4){grid-column:7 / span 3;grid-row:calc(var(--counter) + var(--counter) - 1)/span 2}.skills-container .hex-grid__item:nth-of-type(n+5){--counter: 2}.skills-container .hex-grid__item:nth-of-type(n+9){--counter: 3}.skills-container .hex-grid__item:nth-of-type(n+13){--counter: 4}.skills-container .hex-grid__item:nth-of-type(n+17){--counter: 5}.skills-container .hex-grid__item:nth-of-type(n+21){--counter: 6}.skills-container .hex-grid__item:nth-of-type(n+25){--counter: 7}.skills-container .hex-grid__item:nth-of-type(n+29){--counter: 8}.skills-container .hex-grid__item:nth-of-type(n+33){--counter: 9}.skills-container .hex-grid__item:nth-of-type(n+37){--counter: 10}.skills-container .hex-grid__item:nth-of-type(n+41){--counter: 11}.skills-container .hex-grid__item:nth-of-type(n+45){--counter: 12}.skills-container .hex-grid__item:nth-of-type(n+49){--counter: 13}.skills-container .hex-grid__item:nth-of-type(n+53){--counter: 14}.skills-container .hex-grid__item:nth-of-type(n+57){--counter: 15}.skills-container .hex-grid__item:nth-of-type(n+61){--counter: 16}.skills-container .hex-grid__item:nth-of-type(n+65){--counter: 17}.skills-container .hex-grid__item:nth-of-type(n+69){--counter: 18}.skills-container .hex-grid__item:nth-of-type(n+73){--counter: 19}.skills-container .hex-grid__item:nth-of-type(n+77){--counter: 20}.skills-container .hex-grid__item:nth-of-type(n+81){--counter: 21}}@media screen and (min-width: 840px) and (max-width: 1119px){.skills-container .hex-grid__list{--amount: 3;--counter: 1;grid-gap:1.5rem 3rem}.skills-container .hex-grid__item:nth-of-type(3n+1){grid-column:1 / span 3}.skills-container .hex-grid__item:nth-of-type(3n+2){grid-column:3 / span 3;grid-row:calc(var(--counter) + var(--counter) - 1)/span 2}.skills-container .hex-grid__item:nth-of-type(3n+3){grid-column:5 / span 3}.skills-container .hex-grid__item:nth-of-type(n+4){--counter: 2}.skills-container .hex-grid__item:nth-of-type(n+7){--counter: 3}.skills-container .hex-grid__item:nth-of-type(n+10){--counter: 4}.skills-container .hex-grid__item:nth-of-type(n+13){--counter: 5}.skills-container .hex-grid__item:nth-of-type(n+16){--counter: 6}.skills-container .hex-grid__item:nth-of-type(n+19){--counter: 7}.skills-container .hex-grid__item:nth-of-type(n+22){--counter: 8}.skills-container .hex-grid__item:nth-of-type(n+25){--counter: 9}.skills-container .hex-grid__item:nth-of-type(n+28){--counter: 10}.skills-container .hex-grid__item:nth-of-type(n+31){--counter: 11}.skills-container .hex-grid__item:nth-of-type(n+34){--counter: 12}.skills-container .hex-grid__item:nth-of-type(n+37){--counter: 13}.skills-container .hex-grid__item:nth-of-type(n+40){--counter: 14}.skills-container .hex-grid__item:nth-of-type(n+43){--counter: 15}.skills-container .hex-grid__item:nth-of-type(n+46){--counter: 16}.skills-container .hex-grid__item:nth-of-type(n+49){--counter: 17}.skills-container .hex-grid__item:nth-of-type(n+52){--counter: 18}.skills-container .hex-grid__item:nth-of-type(n+55){--counter: 19}.skills-container .hex-grid__item:nth-of-type(n+58){--counter: 20}.skills-container .hex-grid__item:nth-of-type(n+61){--counter: 21}}@media screen and (min-width: 480px) and (max-width: 839px){.skills-container .hex-grid__list{--amount: 2;--counter: 1;grid-gap:1.5rem 3rem}.skills-container .hex-grid__item:nth-of-type(2n+1){grid-column:1 / span 3}.skills-container .hex-grid__item:nth-of-type(2n+2){grid-column:3 / span 3;grid-row:calc(var(--counter) + var(--counter) - 1)/span 2}.skills-container .hex-grid__item:nth-of-type(n+3){--counter: 2}.skills-container .hex-grid__item:nth-of-type(n+5){--counter: 3}.skills-container .hex-grid__item:nth-of-type(n+7){--counter: 4}.skills-container .hex-grid__item:nth-of-type(n+9){--counter: 5}.skills-container .hex-grid__item:nth-of-type(n+11){--counter: 6}.skills-container .hex-grid__item:nth-of-type(n+13){--counter: 7}.skills-container .hex-grid__item:nth-of-type(n+15){--counter: 8}.skills-container .hex-grid__item:nth-of-type(n+17){--counter: 9}.skills-container .hex-grid__item:nth-of-type(n+19){--counter: 10}.skills-container .hex-grid__item:nth-of-type(n+21){--counter: 11}.skills-container .hex-grid__item:nth-of-type(n+23){--counter: 12}.skills-container .hex-grid__item:nth-of-type(n+25){--counter: 13}.skills-container .hex-grid__item:nth-of-type(n+27){--counter: 14}.skills-container .hex-grid__item:nth-of-type(n+29){--counter: 15}.skills-container .hex-grid__item:nth-of-type(n+31){--counter: 16}.skills-container .hex-grid__item:nth-of-type(n+33){--counter: 17}.skills-container .hex-grid__item:nth-of-type(n+35){--counter: 18}.skills-container .hex-grid__item:nth-of-type(n+37){--counter: 19}.skills-container .hex-grid__item:nth-of-type(n+39){--counter: 20}.skills-container .hex-grid__item:nth-of-type(n+41){--counter: 21}}@media screen and (max-width: 479px){.skills-container .hex-grid__list{--amount: 1;grid-gap:1.5rem 3rem}}.footer-container{width:80vw;margin-top:10vh;margin-bottom:10vh;display:-webkit-flex;display:flex;-webkit-flex-direction:column;flex-direction:column;-webkit-align-items:center;align-items:center;color:white}.footer-container h1{font-size:3rem;line-height:20px}.footer-container h2{font-size:1.5rem;overflow:hidden}@media (min-width: 320px) and (max-width: 424px){.footer-container h2{display:none}}@media (min-width: 425px) and (max-width: 767px){.footer-container h2{font-size:14px}}@media (min-width: 768px) and (max-width: 1023px){.footer-container h2{font-size:1.2rem}}.footer-container .email-link{font-size:1.5rem;color:#D9C717}.footer-container .social-icons{margin-top:20px}.footer-container .social-icons img{height:2rem;margin:10px}.footer-container span{margin-top:10px}.footer-container icon{color:red}*{font-family:\"Montserrat\"}::-webkit-scrollbar{display:none}body{margin:0;padding:0;overflow-y:scroll;overflow-x:hidden;color:#FEE715FF;background-color:#101820FF}.section{width:100vw}.container{width:100%;height:100vh;min-height:720px;display:-webkit-flex;display:flex;-webkit-flex-direction:column;flex-direction:column;-webkit-align-items:center;align-items:center;-webkit-justify-content:center;justify-content:center}@-webkit-keyframes smoothScroll{0%{-webkit-transform:translateY(-142px);transform:translateY(-142px)}100%{-webkit-transform:translateY(0px);transform:translateY(0px)}}@keyframes smoothScroll{0%{-webkit-transform:translateY(-142px);transform:translateY(-142px)}100%{-webkit-transform:translateY(0px);transform:translateY(0px)}}.btn{cursor:pointer;font-size:1.2rem;font-weight:400;line-height:45px;margin:0 0 2em;max-width:160px;position:relative;text-decoration:none;text-transform:uppercase;width:100%;text-align:center;color:white;transition-property:all;transition-duration:.6s;transition-timing-function:ease}@media (min-width: 320px) and (max-width: 424px){.btn{font-size:1rem}}@media (min-width: 425px) and (max-width: 767px){.btn{font-size:1rem}}@media (min-width: 768px) and (max-width: 1023px){.btn{font-size:1rem}}.btn:hover{text-decoration:none}.hexagon{position:relative;width:300px;height:173.21px;margin:86.60px 0;background-size:auto 346.4102px;background-position:center}.hexTop,.hexBottom{position:absolute;z-index:1;width:212.13px;height:212.13px;overflow:hidden;-webkit-transform:scaleY(0.5774) rotate(-45deg);transform:scaleY(0.5774) rotate(-45deg);background:inherit;left:43.93px}.hexTop:after,.hexBottom:after{content:\"\";position:absolute;width:300.0000px;height:173.20508075688775px;-webkit-transform:rotate(45deg) scaleY(1.7321) translateY(-86.6025px);transform:rotate(45deg) scaleY(1.7321) translateY(-86.6025px);-webkit-transform-origin:0 0;transform-origin:0 0;background:inherit}.hexTop{top:-106.0660px}.hexTop:after{background-position:center top}.hexBottom{bottom:-106.0660px}.hexBottom:after{background-position:center bottom}.hexagon:after{content:\"\";position:absolute;top:0.0000px;left:0;width:300.0000px;height:173.2051px;z-index:2;background:inherit}\n\n",".card {\r\n  width: 100%;\r\n  height: 250px;\r\n  overflow: hidden !important;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-size: cover;\r\n  background-repeat: no-repeat;\r\n  background-position: center;\r\n\r\n  .content {\r\n    font-family: \"Open Sans\";\r\n    width: 100%;\r\n    text-align: center;\r\n    padding: 10px;\r\n    opacity: 0;\r\n    transition: all 500ms ease-in-out;\r\n    transform: translate(0, 20px);\r\n    cursor: pointer;\r\n    h1 {\r\n      font-size: 14px;\r\n      color: #ffffff;\r\n    }\r\n    p {\r\n      font-size: 10px;\r\n      color: #ffffff;\r\n      margin-bottom: 20px;\r\n    }\r\n\r\n    .btn {\r\n      background-color: black;\r\n      color: white;\r\n      padding: 10px;\r\n      text-decoration: none;\r\n    }\r\n    &:hover {\r\n      opacity: 1;\r\n      transform: translate(0, 0px);\r\n      background-color: #0000007e;\r\n    }\r\n  }\r\n}\r\n",".navbar-wrapper {\r\n  width: 100vw;\r\n  display: flex;\r\n  align-items: center;\r\n  padding-top: 10px;\r\n  justify-content: space-between;\r\n  border-bottom: 5px solid #ffffff;\r\n  box-shadow:0px 3px 0px #00000013;\r\n  color: black;\r\n  background-color: rgba(254, 231, 21, 0.842);\r\n  z-index: 1000;\r\n  position: absolute;\r\n  \r\n  .current {\r\n    font-weight: 600;\r\n    font-size: 28px;\r\n    border: 1px solid white;\r\n    width: 120px;\r\n    padding: 5px;\r\n    margin: 10px 0px 10px 10px;\r\n    box-shadow: inset 9px 9px 34px -24px rgba(255, 87, 0, 0.342);\r\n    text-align: center;\r\n    .fade-enter {\r\n      opacity: 0;\r\n    }\r\n    .fade-enter-active {\r\n      opacity: 1;\r\n      transition: opacity 300ms cubic-bezier(0.55, 0.085, 0.68, 0.53);\r\n    }\r\n    .fade-exit {\r\n      opacity: 1;\r\n    }\r\n    .fade-exit-active {\r\n      opacity: 0;\r\n      transition: opacity 200ms cubic-bezier(0.25, 0.46, 0.45, 0.94);\r\n    }\r\n    @include media(\">=phone\", \"<lgphone\") {\r\n      font-size: 20px;\r\n      width: 100px;\r\n      margin-right: 5px;\r\n    }\r\n  }\r\n  .links-wrapper {\r\n    .button {\r\n      text-decoration: none;\r\n      padding: 10px;\r\n      font-family: \"Open Sans\";\r\n      transition: all 0.2s ease-in-out;\r\n      font-size: 16px;\r\n      background-color: transparent;\r\n      outline: none;\r\n      border: 0px;\r\n      margin-right: 16px;\r\n      cursor: pointer;\r\n      &:hover {\r\n        color: rgb(255, 87, 0);\r\n      }\r\n      @include media(\">=phone\", \"<lgphone\") {\r\n        font-size: 8px;\r\n        line-height: 10px;\r\n        padding: 0px;\r\n      }\r\n      @include media(\">=lgphone\", \"<tablet\") {\r\n        font-size: 12px;\r\n        padding: 5px;\r\n        margin-right: 8px;\r\n      }\r\n    }\r\n  }\r\n}\r\n","@charset \"UTF-8\";\r\n\r\n//     _            _           _                           _ _\r\n//    (_)          | |         | |                         | (_)\r\n//     _ _ __   ___| |_   _  __| | ___   _ __ ___   ___  __| |_  __ _\r\n//    | | '_ \\ / __| | | | |/ _` |/ _ \\ | '_ ` _ \\ / _ \\/ _` | |/ _` |\r\n//    | | | | | (__| | |_| | (_| |  __/ | | | | | |  __/ (_| | | (_| |\r\n//    |_|_| |_|\\___|_|\\__,_|\\__,_|\\___| |_| |_| |_|\\___|\\__,_|_|\\__,_|\r\n//\r\n//      Simple, elegant and maintainable media queries in Sass\r\n//                        v1.4.9\r\n//\r\n//        https://eduardoboucas.github.io/include-media\r\n//\r\n//         Authors: Eduardo Boucas (@eduardoboucas)\r\n//                  Hugo Giraudel (@hugogiraudel)\r\n//\r\n//      This project is licensed under the terms of the MIT license\r\n////\r\n/// include-media library public configuration\r\n/// @author Eduardo Boucas\r\n/// @access public\r\n////\r\n\r\n///\r\n/// Creates a list of global breakpoints\r\n///\r\n/// @example scss - Creates a single breakpoint with the label `phone`\r\n///  $breakpoints: ('phone': 320px);\r\n///\r\n$breakpoints: (\r\n  \"phone\": 320px,\r\n  \"lgphone\": 425px,\r\n  \"tablet\": 768px,\r\n  \"desktop\": 1024px,\r\n  \"smdesktop\": 1280px,\r\n  \"mddesktop\": 1440px,\r\n  \"lgdesktop\": 1920px,\r\n  \"4k\": 2560px,\r\n) !default;\r\n\r\n///\r\n/// Creates a list of static expressions or media types\r\n///\r\n/// @example scss - Creates a single media type (screen)\r\n///  $media-expressions: ('screen': 'screen');\r\n///\r\n/// @example scss - Creates a static expression with logical disjunction (OR operator)\r\n///  $media-expressions: (\r\n///    'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi)'\r\n///  );\r\n///\r\n$media-expressions: (\r\n  \"screen\": \"screen\",\r\n  \"print\": \"print\",\r\n  \"handheld\": \"handheld\",\r\n  \"landscape\": \"(orientation: landscape)\",\r\n  \"portrait\": \"(orientation: portrait)\",\r\n  \"retina2x\":\r\n    \"(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi), (min-resolution: 2dppx)\",\r\n  \"retina3x\":\r\n    \"(-webkit-min-device-pixel-ratio: 3), (min-resolution: 350dpi), (min-resolution: 3dppx)\",\r\n) !default;\r\n\r\n///\r\n/// Defines a number to be added or subtracted from each unit when declaring breakpoints with exclusive intervals\r\n///\r\n/// @example scss - Interval for pixels is defined as `1` by default\r\n///  @include media('>128px') {}\r\n///\r\n///  /* Generates: */\r\n///  @media (min-width: 129px) {}\r\n///\r\n/// @example scss - Interval for ems is defined as `0.01` by default\r\n///  @include media('>20em') {}\r\n///\r\n///  /* Generates: */\r\n///  @media (min-width: 20.01em) {}\r\n///\r\n/// @example scss - Interval for rems is defined as `0.1` by default, to be used with `font-size: 62.5%;`\r\n///  @include media('>2.0rem') {}\r\n///\r\n///  /* Generates: */\r\n///  @media (min-width: 2.1rem) {}\r\n///\r\n$unit-intervals: (\r\n  \"px\": 1,\r\n  \"em\": 0.01,\r\n  \"rem\": 0.1,\r\n  \"\": 0,\r\n) !default;\r\n\r\n///\r\n/// Defines whether support for media queries is available, useful for creating separate stylesheets\r\n/// for browsers that don't support media queries.\r\n///\r\n/// @example scss - Disables support for media queries\r\n///  $im-media-support: false;\r\n///  @include media('>=tablet') {\r\n///    .foo {\r\n///      color: tomato;\r\n///    }\r\n///  }\r\n///\r\n///  /* Generates: */\r\n///  .foo {\r\n///    color: tomato;\r\n///  }\r\n///\r\n$im-media-support: true !default;\r\n\r\n///\r\n/// Selects which breakpoint to emulate when support for media queries is disabled. Media queries that start at or\r\n/// intercept the breakpoint will be displayed, any others will be ignored.\r\n///\r\n/// @example scss - This media query will show because it intercepts the static breakpoint\r\n///  $im-media-support: false;\r\n///  $im-no-media-breakpoint: 'desktop';\r\n///  @include media('>=tablet') {\r\n///    .foo {\r\n///      color: tomato;\r\n///    }\r\n///  }\r\n///\r\n///  /* Generates: */\r\n///  .foo {\r\n///    color: tomato;\r\n///  }\r\n///\r\n/// @example scss - This media query will NOT show because it does not intercept the desktop breakpoint\r\n///  $im-media-support: false;\r\n///  $im-no-media-breakpoint: 'tablet';\r\n///  @include media('>=desktop') {\r\n///    .foo {\r\n///      color: tomato;\r\n///    }\r\n///  }\r\n///\r\n///  /* No output */\r\n///\r\n$im-no-media-breakpoint: \"desktop\" !default;\r\n\r\n///\r\n/// Selects which media expressions are allowed in an expression for it to be used when media queries\r\n/// are not supported.\r\n///\r\n/// @example scss - This media query will show because it intercepts the static breakpoint and contains only accepted media expressions\r\n///  $im-media-support: false;\r\n///  $im-no-media-breakpoint: 'desktop';\r\n///  $im-no-media-expressions: ('screen');\r\n///  @include media('>=tablet', 'screen') {\r\n///    .foo {\r\n///      color: tomato;\r\n///    }\r\n///  }\r\n///\r\n///   /* Generates: */\r\n///   .foo {\r\n///     color: tomato;\r\n///   }\r\n///\r\n/// @example scss - This media query will NOT show because it intercepts the static breakpoint but contains a media expression that is not accepted\r\n///  $im-media-support: false;\r\n///  $im-no-media-breakpoint: 'desktop';\r\n///  $im-no-media-expressions: ('screen');\r\n///  @include media('>=tablet', 'retina2x') {\r\n///    .foo {\r\n///      color: tomato;\r\n///    }\r\n///  }\r\n///\r\n///  /* No output */\r\n///\r\n$im-no-media-expressions: (\"screen\", \"portrait\", \"landscape\") !default;\r\n\r\n////\r\n/// Cross-engine logging engine\r\n/// @author Hugo Giraudel\r\n/// @access private\r\n////\r\n\r\n///\r\n/// Log a message either with `@error` if supported\r\n/// else with `@warn`, using `feature-exists('at-error')`\r\n/// to detect support.\r\n///\r\n/// @param {String} $message - Message to log\r\n///\r\n@function im-log($message) {\r\n  @if feature-exists(\"at-error\") {\r\n    @error $message;\r\n  } @else {\r\n    @warn $message;\r\n    $_: noop();\r\n  }\r\n\r\n  @return $message;\r\n}\r\n\r\n///\r\n/// Wrapper mixin for the log function so it can be used with a more friendly\r\n/// API than `@if im-log('..') {}` or `$_: im-log('..')`. Basically, use the function\r\n/// within functions because it is not possible to include a mixin in a function\r\n/// and use the mixin everywhere else because it's much more elegant.\r\n///\r\n/// @param {String} $message - Message to log\r\n///\r\n@mixin log($message) {\r\n  @if im-log($message) {\r\n  }\r\n}\r\n\r\n///\r\n/// Function with no `@return` called next to `@warn` in Sass 3.3\r\n/// to trigger a compiling error and stop the process.\r\n///\r\n@function noop() {\r\n}\r\n\r\n///\r\n/// Determines whether a list of conditions is intercepted by the static breakpoint.\r\n///\r\n/// @param {Arglist}   $conditions  - Media query conditions\r\n///\r\n/// @return {Boolean} - Returns true if the conditions are intercepted by the static breakpoint\r\n///\r\n@function im-intercepts-static-breakpoint($conditions...) {\r\n  $no-media-breakpoint-value: map-get($breakpoints, $im-no-media-breakpoint);\r\n\r\n  @if not $no-media-breakpoint-value {\r\n    @if im-log(\"`#{$im-no-media-breakpoint}` is not a valid breakpoint.\") {\r\n    }\r\n  }\r\n\r\n  @each $condition in $conditions {\r\n    @if not map-has-key($media-expressions, $condition) {\r\n      $operator: get-expression-operator($condition);\r\n      $prefix: get-expression-prefix($operator);\r\n      $value: get-expression-value($condition, $operator);\r\n\r\n      @if ($prefix == \"max\" and $value <= $no-media-breakpoint-value) or\r\n        ($prefix == \"min\" and $value > $no-media-breakpoint-value)\r\n      {\r\n        @return false;\r\n      }\r\n    } @else if not index($im-no-media-expressions, $condition) {\r\n      @return false;\r\n    }\r\n  }\r\n\r\n  @return true;\r\n}\r\n\r\n////\r\n/// Parsing engine\r\n/// @author Hugo Giraudel\r\n/// @access private\r\n////\r\n\r\n///\r\n/// Get operator of an expression\r\n///\r\n/// @param {String} $expression - Expression to extract operator from\r\n///\r\n/// @return {String} - Any of `>=`, `>`, `<=`, `<`, `≥`, `≤`\r\n///\r\n@function get-expression-operator($expression) {\r\n  @each $operator in (\">=\", \">\", \"<=\", \"<\", \"≥\", \"≤\") {\r\n    @if str-index($expression, $operator) {\r\n      @return $operator;\r\n    }\r\n  }\r\n\r\n  // It is not possible to include a mixin inside a function, so we have to\r\n  // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\r\n  // functions cannot be called anywhere in Sass, we need to hack the call in\r\n  // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\r\n  // Sass 3.3, change this line in `@if im-log(..) {}` instead.\r\n  $_: im-log(\"No operator found in `#{$expression}`.\");\r\n}\r\n\r\n///\r\n/// Get dimension of an expression, based on a found operator\r\n///\r\n/// @param {String} $expression - Expression to extract dimension from\r\n/// @param {String} $operator - Operator from `$expression`\r\n///\r\n/// @return {String} - `width` or `height` (or potentially anything else)\r\n///\r\n@function get-expression-dimension($expression, $operator) {\r\n  $operator-index: str-index($expression, $operator);\r\n  $parsed-dimension: str-slice($expression, 0, $operator-index - 1);\r\n  $dimension: \"width\";\r\n\r\n  @if str-length($parsed-dimension) > 0 {\r\n    $dimension: $parsed-dimension;\r\n  }\r\n\r\n  @return $dimension;\r\n}\r\n\r\n///\r\n/// Get dimension prefix based on an operator\r\n///\r\n/// @param {String} $operator - Operator\r\n///\r\n/// @return {String} - `min` or `max`\r\n///\r\n@function get-expression-prefix($operator) {\r\n  @return if(index((\"<\", \"<=\", \"≤\"), $operator), \"max\", \"min\");\r\n}\r\n\r\n///\r\n/// Get value of an expression, based on a found operator\r\n///\r\n/// @param {String} $expression - Expression to extract value from\r\n/// @param {String} $operator - Operator from `$expression`\r\n///\r\n/// @return {Number} - A numeric value\r\n///\r\n@function get-expression-value($expression, $operator) {\r\n  $operator-index: str-index($expression, $operator);\r\n  $value: str-slice($expression, $operator-index + str-length($operator));\r\n\r\n  @if map-has-key($breakpoints, $value) {\r\n    $value: map-get($breakpoints, $value);\r\n  } @else {\r\n    $value: to-number($value);\r\n  }\r\n\r\n  $interval: map-get($unit-intervals, unit($value));\r\n\r\n  @if not $interval {\r\n    // It is not possible to include a mixin inside a function, so we have to\r\n    // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\r\n    // functions cannot be called anywhere in Sass, we need to hack the call in\r\n    // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\r\n    // Sass 3.3, change this line in `@if im-log(..) {}` instead.\r\n    $_: im-log(\"Unknown unit `#{unit($value)}`.\");\r\n  }\r\n\r\n  @if $operator == \">\" {\r\n    $value: $value + $interval;\r\n  } @else if $operator == \"<\" {\r\n    $value: $value - $interval;\r\n  }\r\n\r\n  @return $value;\r\n}\r\n\r\n///\r\n/// Parse an expression to return a valid media-query expression\r\n///\r\n/// @param {String} $expression - Expression to parse\r\n///\r\n/// @return {String} - Valid media query\r\n///\r\n@function parse-expression($expression) {\r\n  // If it is part of $media-expressions, it has no operator\r\n  // then there is no need to go any further, just return the value\r\n  @if map-has-key($media-expressions, $expression) {\r\n    @return map-get($media-expressions, $expression);\r\n  }\r\n\r\n  $operator: get-expression-operator($expression);\r\n  $dimension: get-expression-dimension($expression, $operator);\r\n  $prefix: get-expression-prefix($operator);\r\n  $value: get-expression-value($expression, $operator);\r\n\r\n  @return \"(#{$prefix}-#{$dimension}: #{$value})\";\r\n}\r\n\r\n///\r\n/// Slice `$list` between `$start` and `$end` indexes\r\n///\r\n/// @access private\r\n///\r\n/// @param {List} $list - List to slice\r\n/// @param {Number} $start [1] - Start index\r\n/// @param {Number} $end [length($list)] - End index\r\n///\r\n/// @return {List} Sliced list\r\n///\r\n@function slice($list, $start: 1, $end: length($list)) {\r\n  @if length($list) < 1 or $start > $end {\r\n    @return ();\r\n  }\r\n\r\n  $result: ();\r\n\r\n  @for $i from $start through $end {\r\n    $result: append($result, nth($list, $i));\r\n  }\r\n\r\n  @return $result;\r\n}\r\n\r\n////\r\n/// String to number converter\r\n/// @author Hugo Giraudel\r\n/// @access private\r\n////\r\n\r\n///\r\n/// Casts a string into a number\r\n///\r\n/// @param {String | Number} $value - Value to be parsed\r\n///\r\n/// @return {Number}\r\n///\r\n@function to-number($value) {\r\n  @if type-of($value) == \"number\" {\r\n    @return $value;\r\n  } @else if type-of($value) != \"string\" {\r\n    $_: im-log(\"Value for `to-number` should be a number or a string.\");\r\n  }\r\n\r\n  $first-character: str-slice($value, 1, 1);\r\n  $result: 0;\r\n  $digits: 0;\r\n  $minus: ($first-character == \"-\");\r\n  $numbers: (\r\n    \"0\": 0,\r\n    \"1\": 1,\r\n    \"2\": 2,\r\n    \"3\": 3,\r\n    \"4\": 4,\r\n    \"5\": 5,\r\n    \"6\": 6,\r\n    \"7\": 7,\r\n    \"8\": 8,\r\n    \"9\": 9,\r\n  );\r\n\r\n  // Remove +/- sign if present at first character\r\n  @if ($first-character == \"+\" or $first-character == \"-\") {\r\n    $value: str-slice($value, 2);\r\n  }\r\n\r\n  @for $i from 1 through str-length($value) {\r\n    $character: str-slice($value, $i, $i);\r\n\r\n    @if not(index(map-keys($numbers), $character) or $character == \".\") {\r\n      @return to-length(if($minus, -$result, $result), str-slice($value, $i));\r\n    }\r\n\r\n    @if $character == \".\" {\r\n      $digits: 1;\r\n    } @else if $digits == 0 {\r\n      $result: $result * 10 + map-get($numbers, $character);\r\n    } @else {\r\n      $digits: $digits * 10;\r\n      $result: $result + map-get($numbers, $character) / $digits;\r\n    }\r\n  }\r\n\r\n  @return if($minus, -$result, $result);\r\n}\r\n\r\n///\r\n/// Add `$unit` to `$value`\r\n///\r\n/// @param {Number} $value - Value to add unit to\r\n/// @param {String} $unit - String representation of the unit\r\n///\r\n/// @return {Number} - `$value` expressed in `$unit`\r\n///\r\n@function to-length($value, $unit) {\r\n  $units: (\r\n    \"px\": 1px,\r\n    \"cm\": 1cm,\r\n    \"mm\": 1mm,\r\n    \"%\": 1%,\r\n    \"ch\": 1ch,\r\n    \"pc\": 1pc,\r\n    \"in\": 1in,\r\n    \"em\": 1em,\r\n    \"rem\": 1rem,\r\n    \"pt\": 1pt,\r\n    \"ex\": 1ex,\r\n    \"vw\": 1vw,\r\n    \"vh\": 1vh,\r\n    \"vmin\": 1vmin,\r\n    \"vmax\": 1vmax,\r\n  );\r\n\r\n  @if not index(map-keys($units), $unit) {\r\n    $_: im-log(\"Invalid unit `#{$unit}`.\");\r\n  }\r\n\r\n  @return $value * map-get($units, $unit);\r\n}\r\n\r\n///\r\n/// This mixin aims at redefining the configuration just for the scope of\r\n/// the call. It is helpful when having a component needing an extended\r\n/// configuration such as custom breakpoints (referred to as tweakpoints)\r\n/// for instance.\r\n///\r\n/// @author Hugo Giraudel\r\n///\r\n/// @param {Map} $tweakpoints [()] - Map of tweakpoints to be merged with `$breakpoints`\r\n/// @param {Map} $tweak-media-expressions [()] - Map of tweaked media expressions to be merged with `$media-expression`\r\n///\r\n/// @example scss - Extend the global breakpoints with a tweakpoint\r\n///  @include media-context(('custom': 678px)) {\r\n///    .foo {\r\n///      @include media('>phone', '<=custom') {\r\n///       // ...\r\n///      }\r\n///    }\r\n///  }\r\n///\r\n/// @example scss - Extend the global media expressions with a custom one\r\n///  @include media-context($tweak-media-expressions: ('all': 'all')) {\r\n///    .foo {\r\n///      @include media('all', '>phone') {\r\n///       // ...\r\n///      }\r\n///    }\r\n///  }\r\n///\r\n/// @example scss - Extend both configuration maps\r\n///  @include media-context(('custom': 678px), ('all': 'all')) {\r\n///    .foo {\r\n///      @include media('all', '>phone', '<=custom') {\r\n///       // ...\r\n///      }\r\n///    }\r\n///  }\r\n///\r\n@mixin media-context($tweakpoints: (), $tweak-media-expressions: ()) {\r\n  // Save global configuration\r\n  $global-breakpoints: $breakpoints;\r\n  $global-media-expressions: $media-expressions;\r\n\r\n  // Update global configuration\r\n  $breakpoints: map-merge($breakpoints, $tweakpoints) !global;\r\n  $media-expressions: map-merge(\r\n    $media-expressions,\r\n    $tweak-media-expressions\r\n  ) !global;\r\n\r\n  @content;\r\n\r\n  // Restore global configuration\r\n  $breakpoints: $global-breakpoints !global;\r\n  $media-expressions: $global-media-expressions !global;\r\n}\r\n\r\n////\r\n/// include-media public exposed API\r\n/// @author Eduardo Boucas\r\n/// @access public\r\n////\r\n\r\n///\r\n/// Generates a media query based on a list of conditions\r\n///\r\n/// @param {Arglist}   $conditions  - Media query conditions\r\n///\r\n/// @example scss - With a single set breakpoint\r\n///  @include media('>phone') { }\r\n///\r\n/// @example scss - With two set breakpoints\r\n///  @include media('>phone', '<=tablet') { }\r\n///\r\n/// @example scss - With custom values\r\n///  @include media('>=358px', '<850px') { }\r\n///\r\n/// @example scss - With set breakpoints with custom values\r\n///  @include media('>desktop', '<=1350px') { }\r\n///\r\n/// @example scss - With a static expression\r\n///  @include media('retina2x') { }\r\n///\r\n/// @example scss - Mixing everything\r\n///  @include media('>=350px', '<tablet', 'retina3x') { }\r\n///\r\n@mixin media($conditions...) {\r\n  @if ($im-media-support and length($conditions) == 0) or\r\n    (not $im-media-support and im-intercepts-static-breakpoint($conditions...))\r\n  {\r\n    @content;\r\n  } @else if ($im-media-support and length($conditions) > 0) {\r\n    @media #{unquote(parse-expression(nth($conditions, 1)))} {\r\n      // Recursive call\r\n      @include media(slice($conditions, 2)...) {\r\n        @content;\r\n      }\r\n    }\r\n  }\r\n}\r\n",".header-wrapper {\r\n  width: 100vw;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  .heading-wrapper {\r\n    h1 {\r\n      font-family: 'Raleway', sans-serif;\r\n      font-size: 3em;\r\n      text-align: center;\r\n      line-height: 20px;\r\n      @include media(\">=phone\", \"<lgphone\") {\r\n        font-size: 1.5rem;\r\n        line-height: 10px;\r\n      }\r\n      @include media(\">=lgphone\", \"<tablet\") {\r\n        font-size: 2rem;\r\n      }\r\n      @include media(\">=tablet\", \"<desktop\") {\r\n        font-size: 2rem;\r\n      }\r\n    }\r\n  }\r\n\r\n  .buttons{\r\n    display: flex;\r\n    width: 300px;\r\n    flex-direction: column;\r\n    align-items: center;\r\n\r\n    .btn-5 {\r\n      border: 0 solid;\r\n      box-shadow: inset 0 0 20px rgba(255, 255, 255, 0);\r\n      outline: 1px solid;\r\n      outline-color: rgba(255, 255, 255, .5);\r\n      outline-offset: 0px;\r\n      text-shadow: none;\r\n      transition: all 1250ms cubic-bezier(0.19, 1, 0.22, 1);\r\n    } \r\n    \r\n    .btn-5:hover {\r\n      border: 1px solid;\r\n      box-shadow: inset 0 0 20px rgba(255, 255, 255, .5), 0 0 20px rgba(255, 255, 255, .2);\r\n      outline-color: rgba(255, 255, 255, 0);\r\n      outline-offset: 15px;\r\n      text-shadow: 1px 1px 2px #427388; \r\n    }\r\n  }\r\n}",".work-wrapper {\r\n  width: 80vw;\r\n  margin-top: 10vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  h1 {\r\n    font-size: 3rem;\r\n    line-height: 20px;\r\n  }\r\n  .grid {\r\n    display: grid;\r\n    margin-top: 20px;\r\n    grid-template-columns: repeat(3, 1fr);\r\n    grid-gap: 50px;\r\n    @include media(\">=phone\", \"<lgphone\") {\r\n      grid-template-columns: 1fr;\r\n    }\r\n    @include media(\">=lgphone\", \"<tablet\") {\r\n      grid-template-columns: 1fr;\r\n    }\r\n    @include media(\">=tablet\", \"<desktop\") {\r\n      grid-template-columns: 1fr 1fr;\r\n    }\r\n  }\r\n}\r\n",".about-section {\r\n  width: 100vw;\r\n  max-width: 1200px;\r\n  display: flex;\r\n  justify-content:space-around;\r\n  color: azure;\r\n  @include media(\">=phone\", \"<lgphone\") {\r\n    flex-direction: column;\r\n  }\r\n  @include media(\">=lgphone\", \"<=desktop\") {\r\n    flex-direction: column;\r\n    align-items: center;\r\n    margin-top: 10vh;\r\n    width:90vw;\r\n  }\r\n  \r\n  .content {\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    @include media(\"<phone\") {\r\n      width:100%;\r\n    }\r\n    @include media(\">phone\", \"<tablet\") {\r\n      width:80%;\r\n    }\r\n    @include media(\">=tablet\", \"<desktop\") {\r\n      width: 75%;\r\n    }\r\n\r\n    h1 {\r\n      font-size: 3rem;\r\n      line-height: 20px;\r\n      @include media(\">=phone\", \"<=tablet\") {\r\n        text-align: center;\r\n      }\r\n    }\r\n  }\r\n\r\n  .image-wrapper {\r\n    width: 650px;\r\n    height: auto;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    overflow: hidden;\r\n    padding: 10px;\r\n    \r\n    img {\r\n      max-width: 80%;\r\n      max-height: 80%; \r\n      margin-bottom: 50px;    \r\n    }\r\n  \r\n    @include media(\">=phone\", \"<tablet\") {\r\n      width: auto;\r\n      align-self: center;\r\n    }\r\n    @include media(\">=tablet\", \"<desktop\") {\r\n      width: auto;\r\n      height: auto;\r\n    }\r\n\r\n    .hexagon{\r\n      background-image: url(../images/profilepic2.jpg);\r\n    }\r\n    \r\n  }\r\n  \r\n  .btn-2 {\r\n    letter-spacing: 0;\r\n    padding: 20px;\r\n\r\n    @include media(\">=phone\", \"<=tablet\") {\r\n      align-self: center;\r\n    }\r\n  }\r\n\r\n  .btn-2:hover,\r\n  .btn-2:active {\r\n    letter-spacing: 5px;\r\n  }\r\n\r\n  .btn-2:after,\r\n  .btn-2:before {\r\n    backface-visibility: hidden;\r\n    border: 1px solid rgba(rgb(253,230,21), 0);\r\n    bottom: 0px;\r\n    content: \" \";\r\n    display: block;\r\n    margin: 0 auto;\r\n    position: relative;\r\n    transition: all 280ms ease-in-out;\r\n    width: 0;\r\n  }\r\n\r\n  .btn-2:hover:after,\r\n  .btn-2:hover:before {\r\n    backface-visibility: hidden;\r\n    border-color: rgb(253,230,21);\r\n    transition: width 350ms ease-in-out;\r\n    width: 70%;\r\n  }\r\n\r\n  .btn-2:hover:before {\r\n    bottom: auto;\r\n    top: 0;\r\n    width: 70%;\r\n  }\r\n}\r\n",".skills-container {\r\n  width: 60vw;\r\n  max-width: 1200px;\r\n  display: flex;\r\n  margin-bottom: 10vh;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: #00000069;\r\n  color: white;\r\n  box-shadow: -3px 3px 10px 0px;\r\n  border-radius: 1em;\r\n  padding: 60px;\r\n  h1 {\r\n    font-size: 3rem;\r\n    line-height: 20px;\r\n  }\r\n\r\n  .skills-grid {\r\n    display: grid;\r\n    grid-template-columns: repeat(3, 1fr);\r\n    grid-gap: 20px;\r\n    @include media(\">=phone\", \"<lgphone\") {\r\n      grid-template-columns: 1fr;\r\n    }\r\n    @include media(\">=lgphone\", \"<tablet\") {\r\n      grid-template-columns: 1fr;\r\n    }\r\n    @include media(\">=tablet\", \"<desktop\") {\r\n      grid-template-columns: 1fr 1fr;\r\n    }\r\n    .skill {\r\n      display: flex;\r\n      flex-direction: column;\r\n      align-items: center;\r\n      text-align: center;\r\n      padding: 100px;\r\n      @include media(\">=phone\", \"<lgphone\") {\r\n        padding: 0px;\r\n      }\r\n      @include media(\">=lgphone\", \"<tablet\") {\r\n        padding: 40px;\r\n      }\r\n      img {\r\n        height: 6rem;\r\n      }\r\n      p {\r\n        font-size: 14px;\r\n      }\r\n    }\r\n  }\r\n\r\n  $block: '.hex-grid';\r\n\r\n@mixin grid-item($amount) {\r\n    @for $i from 1 through $amount {\r\n        &:nth-of-type(#{$amount}n + #{$i}) {\r\n            grid-column: #{$i + $i - 1} / span 3;\r\n            @if $i % 2 == 0 {\r\n                grid-row: calc(var(--counter) + var(--counter) - 1) / span 2;\r\n            }\r\n        }\r\n    }\r\n\r\n    @for $i from 1 through 20 {\r\n        &:nth-of-type(n + #{$i * $amount + 1}) {\r\n            --counter: #{$i + 1};\r\n        }\r\n    }\r\n}\r\n\r\n#{$block} {\r\n    display: flex;\r\n\tjustify-content: center;\r\n\r\n    &__list {\r\n        --amount: 5;\r\n        position: relative;\r\n        padding: 0;\r\n\t\tmargin: 0;\r\n\t\tlist-style-type: none;\r\n\t\tdisplay: grid;\r\n        grid-template-columns: repeat(var(--amount), 1fr 2fr) 1fr;\r\n\t\tgrid-gap: 2.5rem 5rem;\r\n    }\r\n\r\n    &__item {\r\n        position: relative;\r\n\t\tgrid-column: 1 / span 3;\r\n\t\tgrid-row: calc(var(--counter) + var(--counter)) / span 2;\r\n\t\tfilter: drop-shadow(0 0 10px rgba(#444, .08));\r\n\t\theight: 0;\r\n\t\tpadding-bottom: 90%;\r\n    }\r\n\r\n    &__content {\r\n        position: absolute;\r\n\t\theight: 100%;\r\n\t\twidth: 100%;\r\n\t\tfont-size: 1.125rem;\r\n\t\tcolor: #111111;\r\n\t\tbackground-color: white;\r\n\t\tclip-path: polygon(75% 0, 100% 50%, 75% 100%, 25% 100%, 0 50%, 25% 0);\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tjustify-content: center;\r\n\t\talign-items: center;\r\n\t\tpadding: 2rem 25%;\r\n\t\ttext-decoration: none;\r\n\t\ttext-align: center;\r\n\t\ttransition: transform .24s ease-out;\r\n    }\r\n}\r\n\r\n@media screen and (min-width: 1440px) {\r\n\t#{$block} {\r\n\t\t&__list {\r\n            --amount: 5;\r\n\t\t\t--counter: 1;\r\n\t\t}\r\n\r\n\t\t&__item {\r\n\t\t\t@include grid-item(5);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n@media screen and (min-width: 1120px) and (max-width: 1439px) {\r\n\t#{$block} {\r\n\t\t&__list {\r\n            --amount: 4;\r\n\t\t\t--counter: 1;\r\n\t\t}\r\n\r\n\t\t&__item {\r\n\t\t\t@include grid-item(4);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n@media screen and (min-width: 840px) and (max-width: 1119px) {\r\n\t#{$block} {\r\n\t\t&__list {\r\n            --amount: 3;\r\n\t\t\t--counter: 1;\r\n\t\t\tgrid-gap: 1.5rem 3rem;\r\n\t\t}\r\n\r\n\t\t&__item {\r\n\t\t\t@include grid-item(3);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n@media screen and (min-width: 480px) and (max-width: 839px) {\r\n\t#{$block} {\r\n\t\t&__list {\r\n\t\t\t--amount: 2;\r\n\t\t\t--counter: 1;\r\n\t\t\tgrid-gap: 1.5rem 3rem;\r\n\t\t}\r\n\r\n\t\t&__item {\r\n\t\t\t@include grid-item(2);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n@media screen and (max-width: 479px) {\r\n\t#{$block} {\r\n\t\t&__list {\r\n            --amount: 1;\r\n\t\t\tgrid-gap: 1.5rem 3rem;\r\n\t\t}\r\n\t}\r\n}\r\n}\r\n",".footer-container {\r\n  width: 80vw;\r\n  margin-top: 10vh;\r\n  margin-bottom: 10vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  color: white;\r\n  h1 {\r\n    font-size: 3rem;\r\n    line-height: 20px;\r\n  }\r\n  h2 {\r\n    font-size: 1.5rem;\r\n    overflow: hidden;\r\n    @include media(\">=phone\", \"<lgphone\") {\r\n      display: none;\r\n    }\r\n    @include media(\">=lgphone\", \"<tablet\") {\r\n      font-size: 14px;\r\n    }\r\n    @include media(\">=tablet\", \"<desktop\") {\r\n      font-size: 1.2rem;\r\n    }\r\n  }\r\n  .email-link {\r\n    font-size: 1.5rem;\r\n    color: #D9C717;\r\n  }\r\n  .social-icons {\r\n    margin-top: 20px;\r\n    img {\r\n      height: 2rem;\r\n      margin: 10px;\r\n    }\r\n  }\r\n  span {\r\n    margin-top: 10px;\r\n  }\r\n  icon {\r\n    color: red;\r\n  }\r\n}\r\n","@charset \"utf-8\";\r\n@import \"./include-media.scss\";\r\n@import url(\"https://fonts.googleapis.com/css2?family=Montserrat:wght@400;700&family=Open+Sans&display=swap\");\r\n@import url('https://fonts.googleapis.com/css2?family=Roboto+Condensed&display=swap');\r\n@import url('https://fonts.googleapis.com/css2?family=Raleway&display=swap');\r\n\r\n// Components\r\n@import \"./card.scss\";\r\n@import \"./navbar.scss\";\r\n@import \"./header.scss\";\r\n@import \"./work.scss\";\r\n@import \"./about.scss\";\r\n@import \"./skills.scss\";\r\n@import \"./footer.scss\";\r\n\r\n\r\n* {\r\n  font-family: \"Montserrat\";\r\n  \r\n}\r\n::-webkit-scrollbar {\r\n  display: none;\r\n}\r\n\r\nbody {\r\n  margin: 0;\r\n  padding: 0;\r\n  overflow-y: scroll;\r\n  overflow-x: hidden;\r\n  color: #FEE715FF;\r\n  background-color: #101820FF;\r\n}\r\n\r\n.section {\r\n  width: 100vw;\r\n}\r\n\r\n.container {\r\n  width: 100%;\r\n  height: 100vh;\r\n  min-height: 720px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n@keyframes smoothScroll {\r\n  0% {\r\n    transform: translateY(-142px);\r\n  }\r\n\r\n  100% {\r\n    transform: translateY(0px);\r\n  }\r\n}\r\n\r\n.btn {\r\n  cursor: pointer;\r\n  font-size: 1.2rem;\r\n  font-weight: 400;\r\n  line-height: 45px;\r\n  margin: 0 0 2em;\r\n  max-width: 160px; \r\n  position: relative;\r\n  text-decoration: none;\r\n  text-transform: uppercase;\r\n  width: 100%; \r\n  text-align: center;\r\n  color: white;\r\n\r\n  transition-property: all;\r\n  transition-duration: .6s;\r\n  transition-timing-function: ease;\r\n  \r\n  @include media(\">=phone\", \"<lgphone\") {\r\n    font-size: 1rem;\r\n  }\r\n  @include media(\">=lgphone\", \"<tablet\") {\r\n    font-size: 1rem;\r\n  }\r\n  @include media(\">=tablet\", \"<desktop\") {\r\n    font-size: 1rem;\r\n  }\r\n\r\n  &:hover { text-decoration: none; }\r\n}\r\n\r\n\r\n.hexagon {\r\n  position: relative;\r\n  width: 300px; \r\n  height: 173.21px;\r\n  margin: 86.60px 0;\r\n  background-size: auto 346.4102px;\r\n  background-position: center;\r\n}\r\n\r\n.hexTop,\r\n.hexBottom {\r\n  position: absolute;\r\n  z-index: 1;\r\n  width: 212.13px;\r\n  height: 212.13px;\r\n  overflow: hidden;\r\n  -webkit-transform: scaleY(0.5774) rotate(-45deg);\r\n  -ms-transform: scaleY(0.5774) rotate(-45deg);\r\n  transform: scaleY(0.5774) rotate(-45deg);\r\n  background: inherit;\r\n  left: 43.93px;\r\n}\r\n\r\n/*counter transform the bg image on the caps*/\r\n.hexTop:after,\r\n.hexBottom:after {\r\n  content: \"\";\r\n  position: absolute;\r\n  width: 300.0000px;\r\n  height: 173.20508075688775px;\r\n  -webkit-transform:  rotate(45deg) scaleY(1.7321) translateY(-86.6025px);\r\n  -ms-transform:      rotate(45deg) scaleY(1.7321) translateY(-86.6025px);\r\n  transform:          rotate(45deg) scaleY(1.7321) translateY(-86.6025px);\r\n  -webkit-transform-origin: 0 0;\r\n  -ms-transform-origin: 0 0;\r\n  transform-origin: 0 0;\r\n  background: inherit;\r\n}\r\n\r\n.hexTop {\r\n  top: -106.0660px;\r\n}\r\n\r\n.hexTop:after {\r\n  background-position: center top;\r\n}\r\n\r\n.hexBottom {\r\n  bottom: -106.0660px;\r\n}\r\n\r\n.hexBottom:after {\r\n  background-position: center bottom;\r\n}\r\n\r\n.hexagon:after {\r\n  content: \"\";\r\n  position: absolute;\r\n  top: 0.0000px;\r\n  left: 0;\r\n  width: 300.0000px;\r\n  height: 173.2051px;\r\n  z-index: 2;\r\n  background: inherit;\r\n}"]}